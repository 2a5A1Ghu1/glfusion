{# begin {templatelocation} #}
<script src="{site_url}/ckeditor/ckeditor.js"></script>
<script >
	var site_url = "{site_url}";
	var introtext;
	var bodytext;
	var lastActivity = 0;

	function loadEditor(id,height) {
		var instance = CKEDITOR.replace( id, {
			toolbar: 'standard',
			removePlugins: 'scayt,wsc',
			extraPlugins: 'mediagallery,youtube2,vimeo',
			contentsCss : [ '{css_url}', '{site_url}/ckeditor/contents.css' ],
			bodyClass: 'uk-article tm-article',
			height: height,
			{styleset}
{!if mbmissing} {# check for mbstring extension in PHP #}
			removePlugins: 'fileman',
			filebrowserBrowseUrl :  '',
			filebrowserImageBrowseUrl : '',
{!endif}

			language: '{iso_lang}',
// advanced encoding
			basicEntities : true,
			entities : false,
			entities_greek : false,
			entities_latin : false,
			fillEmptyBlocks : true,
			tabSpaces: 4,
			allowedContent: true,
		} );

//		instance.config.protectedSource.push(/<i[^>]*><\/i>/g);

		return instance;
	}
	function won (id) {
		if (id == 'introtext') {
			introtext = loadEditor(id,400);
			activityCheckIntro();
		}

		if (id == 'bodytext')  {
			bodytext = loadEditor(id,500);
			activityCheckBody();
		}
	}
	function woff (id) {
		if ( id == 'introtext' ) introtext.destroy();
		if ( id == 'bodytext' )  bodytext.destroy();
	}
  function activityCheckIntro() {
		if ( typeof introtext != 'undefined') {
  			lastActivity = new Date().getTime();
  	  	introtext.on( 'key', function(){
	  	  	lastActivity = new Date().getTime();
	        if (modifiedForm != null){
	            modifiedForm = 1;
	        }
    	});
  	}
  }
  function activityCheckBody() {
		if ( typeof bodytext != 'undefined') {
  			lastActivity = new Date().getTime();
  	  	bodytext.on( 'key', function(){
  	  		lastActivity = new Date().getTime();
	        if (modifiedForm != null){
	            modifiedForm = 1;
	        }
    	});
  	}
  }

</script>
{# end {templatelocation} #}